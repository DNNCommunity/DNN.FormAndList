    /************************************************************/
    /*****       SqlDataProvider                            *****/
    /*****       Install/Upgrade for UserDefinedTable 6.5.7 *****/
    /*****                                                  *****/
    /*****                                                  *****/
    /***** Note: To manually execute this script you must   *****/
    /*****       perform a search AND replace operation     *****/
    /*****       for {databaseOwner} AND {objectQualifier}  *****/
    /*****       or use 'SQL' FROM Host Menu AND run this.  *****/
    /*****                                                  *****/
    /*****                                                  *****/
    /************************************************************/


IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}UserDefinedRows]') and OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		ALTER TABLE {databaseOwner}{objectQualifier}UserDefinedRows ADD CreatedAt datetime NULL
	END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UserDefinedTable_GetRowsWithDates]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}UserDefinedTable_GetRowsWithDates
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}UserDefinedTable_GetRowsWithDates]
	@ModuleId INT,
	@From DATETIME,
	@To DATETIME
AS
SELECT R.UserDefinedRowId,
       F.FieldTitle,
       D.FieldValue
FROM {databaseOwner}{objectQualifier}UserDefinedRows R
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UserDefinedData D on R.UserDefinedRowId = D.UserDefinedRowId
INNER JOIN {databaseOwner}{objectQualifier}UserDefinedFields F on D.UserDefinedFieldId = F.UserDefinedFieldId 
WHERE  R.ModuleId = @ModuleId
AND R.CreatedAt BETWEEN @From AND @To
ORDER by R.UserDefinedRowID
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UserDefinedTable_AddRow]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}UserDefinedTable_AddRow
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}UserDefinedTable_AddRow]
@ModuleId         int
AS
INSERT INTO {databaseOwner}{objectQualifier}UserDefinedRows ( 
  ModuleId, CreatedAt
)
VALUES (
  @ModuleId, GETUTCDATE()
)
SELECT SCOPE_IDENTITY()
GO